From 5d12502b47024d47dc772d14429dbe52aee1aed9 Mon Sep 17 00:00:00 2001
From: Sajjad Ahmed <sajjad_ahmed@mentor.com>
Date: Fri, 4 Oct 2019 10:48:11 +0500
Subject: [PATCH 1/5] add_tracepoint_layer

---
 src/corelib/animation/qabstractanimation.cpp | 29 ++++++++++++++++++++++++++++
 src/corelib/corelib.pro                      |  2 ++
 src/corelib/kernel/qcoreapplication.cpp      | 19 ++++++++++++++++++
 3 files changed, 50 insertions(+)

diff --git a/src/corelib/animation/qabstractanimation.cpp b/src/corelib/animation/qabstractanimation.cpp
index 42308b7..e6dbb81 100644
--- a/src/corelib/animation/qabstractanimation.cpp
+++ b/src/corelib/animation/qabstractanimation.cpp
@@ -153,6 +153,10 @@
 #include <QtCore/qcoreevent.h>
 #include <QtCore/qpointer.h>
 
+#ifdef ENABLE_SA_TRACE
+    #include <sa-trace/qt_tracepoints.h>
+#endif // ENABLE_SA_TRACE
+
 #define DEFAULT_TIMER_INTERVAL 16
 #define PAUSE_TIMER_COARSE_THRESHOLD 2000
 
@@ -222,6 +226,10 @@ QUnifiedTimer::QUnifiedTimer() :
     slowdownFactor(5.0f), profilerCallback(0),
     driverStartTime(0), temporalDrift(0)
 {
+#ifdef ENABLE_SA_TRACE
+    qt_tracepoint(Qt, qtAnimTimingInterval, DEFAULT_TIMER_INTERVAL);
+#endif // ENABLE_SA_TRACE
+
     time.invalidate();
     driver = &defaultDriver;
 }
@@ -315,6 +323,10 @@ void QUnifiedTimer::updateAnimationTimers(qint64 currentTick)
     //* it might happen in some cases that the delta is negative because the animation driver
     //  advances faster than time.elapsed()
     if (delta > 0) {
+#ifdef ENABLE_SA_TRACE
+        qt_tracepoint(Qt, qtAnimTick, 1);
+#endif // ENABLE_SA_TRACE
+
         insideTick = true;
         if (profilerCallback)
             profilerCallback(delta);
@@ -324,6 +336,11 @@ void QUnifiedTimer::updateAnimationTimers(qint64 currentTick)
         }
         insideTick = false;
         currentAnimationIdx = 0;
+
+#ifdef ENABLE_SA_TRACE
+        qt_tracepoint(Qt, qtAnimTick, 0);
+#endif // ENABLE_SA_TRACE
+
     }
 }
 
@@ -371,6 +388,10 @@ void QUnifiedTimer::restart()
 
 void QUnifiedTimer::setTimingInterval(int interval)
 {
+#ifdef ENABLE_SA_TRACE
+    qt_tracepoint(Qt, qtAnimTimingInterval, interval);
+#endif // ENABLE_SA_TRACE
+
     timingInterval = interval;
 
     if (driver->isRunning() && !pauseTimer.isActive()) {
@@ -867,6 +888,10 @@ bool QAnimationDriver::isRunning() const
 
 void QAnimationDriver::start()
 {
+#ifdef ENABLE_SA_TRACE
+    qt_tracepoint(Qt, qtAnimDriver, 1);
+#endif // ENABLE_SA_TRACE
+
     Q_D(QAnimationDriver);
     if (!d->running) {
         d->running = true;
@@ -883,6 +908,10 @@ void QAnimationDriver::stop()
         d->running = false;
         emit stopped();
     }
+#ifdef ENABLE_SA_TRACE
+    qt_tracepoint(Qt, qtAnimDriver, 0);
+#endif // ENABLE_SA_TRACE
+
 }
 
 
diff --git a/src/corelib/corelib.pro b/src/corelib/corelib.pro
index 181780c..c2e1735 100644
--- a/src/corelib/corelib.pro
+++ b/src/corelib/corelib.pro
@@ -45,6 +45,8 @@ include(serialization/serialization.pri)
 include(statemachine/statemachine.pri)
 include(mimetypes/mimetypes.pri)
 
+contains(QT_CONFIG,sa-trace):include(../3rdparty/sa-trace.pri)
+
 win32 {
     LIBS_PRIVATE += -lws2_32
     !winrt {
diff --git a/src/corelib/kernel/qcoreapplication.cpp b/src/corelib/kernel/qcoreapplication.cpp
index db65460..1b4d135 100644
--- a/src/corelib/kernel/qcoreapplication.cpp
+++ b/src/corelib/kernel/qcoreapplication.cpp
@@ -130,6 +130,11 @@
 
 #include <algorithm>
 
+#ifdef ENABLE_SA_TRACE
+    #define QT_TRACEPOINT_PER_LIBRARY_DEFINITION
+    #include <sa-trace/qt_tracepoints.h>
+#endif // ENABLE_SA_TRACE
+
 QT_BEGIN_NAMESPACE
 
 #ifndef QT_NO_QOBJECT
@@ -508,6 +513,10 @@ QCoreApplicationPrivate::~QCoreApplicationPrivate()
     delete [] origArgv;
 #endif
     QCoreApplicationPrivate::clearApplicationFilePath();
+
+#ifdef ENABLE_SA_TRACE
+    qt_tracepoint(Qt, qtApplicationCreated, 0);
+#endif // ENABLE_SA_TRACE
 }
 
 #ifndef QT_NO_QOBJECT
@@ -1052,6 +1061,11 @@ void QCoreApplication::setQuitLockEnabled(bool enabled)
 */
 bool QCoreApplication::notifyInternal(QObject *receiver, QEvent *event)
 {
+#ifdef ENABLE_SA_TRACE
+    if (event)
+        qt_tracepoint(Qt, qtCoreEvents, event->type());
+#endif // ENABLE_SA_TRACE
+
     return notifyInternal2(receiver, event);
 }
 
@@ -1064,6 +1078,11 @@ bool QCoreApplication::notifyInternal(QObject *receiver, QEvent *event)
 */
 bool QCoreApplication::notifyInternal2(QObject *receiver, QEvent *event)
 {
+#ifdef ENABLE_SA_TRACE
+    if (event)
+        qt_tracepoint(Qt, qtCoreEvents, event->type());
+#endif // ENABLE_SA_TRACE
+
     bool selfRequired = QCoreApplicationPrivate::threadRequiresCoreApplication();
     if (!self && selfRequired)
         return false;
-- 
2.7.4

